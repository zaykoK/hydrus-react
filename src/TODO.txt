Some way to streamline styling

changePage to starting hash, this way i can do dynamic result number etc.

Caching of content

Redo Tag Buttons so OR queries are two buttons that change into normal tag query when one is removed


Modularize stuff

Add JSDoc comments

TRANSCODE stuff
add a block so files bigger than X won't load when transcode already exist
This is to prevent situations where original is super big (I have images which have ~80MB full res PNG that don't look that different in smaller encodes) and takes long time/load of transfer to load



Add search/result strictness - Add a toggle which will determine if result are supposed to be showing groups in which given file tag exist or strictly only files with given tag.



Possible Grouping styles:
- Comic - has to be ordered by page, all images must have page: tag
- Single-variants - single image with multiple variants, ordering not necessary
- Single-ordered - single image that has an (obvious or not) ordering of it
- Ordered imageset - image set that requires ordering to make sense from it
- 


Element Selection

Tag Editing
--Simple Tag Addition/Removal
--Adding page order to selected files



SCENARIOS

1.Select multiple elements and group them.
If one of the elements already exists in given namespace group, automatically assume rest should join.
If not follow this scheme for default naming [<creator>||<person> (if no creator tag)] <Earliest Date for given files> (Year Month) <recommended title> (Can be taken from other title namespaces)

2.Remove tag from all files
Search all files with given tag.
Remove that tag from them.

3.Rename tag
Search all files with tag.
Remove it.
Add new one.

4.Rename namespace
Do a tag search * in namespace.
Go over every single entry with this rename tag function. something like 
let searched = entry => 'clothing:dress'
let newOne = searched.replace('clothing:','clothes:')
renameTag(searched,newOne)

